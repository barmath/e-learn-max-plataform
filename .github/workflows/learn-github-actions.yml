name: learn-github-actions
on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main

jobs:
#  services:
#    # Label used to access the service container
#    postgres:
#      # Docker Hub image
#      image: postgres
#      # Provide the password for postgres
#      env:
#        POSTGRES_PASSWORD: postgres
#      # Set health checks to wait until postgres has started
#      options: >-
#        --health-cmd pg_isready
#        --health-interval 10s
#        --health-timeout 5s
#        --health-retries 5
#    steps:
#        # Downloads a copy of the code in your repository before running CI tests
#      - name: Check out repository code
#        uses: actions/checkout@v3
#
#      # Performs a clean installation of all dependencies in the `package.json` file
#      # For more information, see https://docs.npmjs.com/cli/ci.html
#      - name: Install dependencies
#        run: npm ci
#
#      - name: Connect to PostgreSQL
#        # Runs a script that creates a PostgreSQL table, populates
#        # the table with data, and then retrieves the data.
#        run: node client.js
#        # Environment variables used by the `client.js` script to create a new PostgreSQL table.
#        env:
#          # The hostname used to communicate with the PostgreSQL service container
#          POSTGRES_HOST: postgres
#            # The default PostgreSQL port
#          POSTGRES_PORT: 5432


  Test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:12.1-alpine
        ports:
          - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    steps:
      - uses: actions/checkout@master

      - name: Setup Code Climate
       # You may pin to the exact commit or the version.
        # uses: amancevice/setup-code-climate@2d0861ea2da616c79b758c4646ca49bfdc651a4c
        uses: amancevice/setup-code-climate@v0
        with:
          # Code Climate test reporter ID
          cc_test_reporter_id: c9d86401462a15ddc1befdf2f214ab6d23be59e1c167504e1ead6119341b6cd7



      - name: Setup Ruby 3.1.2
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: 3.1.2

      - name: Setup Node 14
        uses: actions/setup-node@v1
        with:
          node-version: 14.x

      - name: Get yarn cache
        id: yarn-cache
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - name: Cache yarn
        uses: actions/cache@v1
        with:
          path: ${{ steps.yarn-cache.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - name: Cache gems
        uses: actions/cache@v1
        with:
          path: vendor/bundle
          key: ${{ runner.os }}-gem-${{ hashFiles('**/Gemfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-gem-
      - name: Install dependencies
        run: |
          gem install bundler
          bundle config path vendor/bundle
          bundle install --jobs 4 --retry 3
          yarn install --frozen-lockfile
      - name: Run tests
        env:
          RAILS_ENV: test
          DATABASE_URL: "postgres://postgres@localhost:5432/flatiron_mod3_test"
          RAILS_MASTER_KEY: ${{ secrets.RAILS_MASTER_KEY }}
        run: |
          bundle update --bundler
          bundle exec rails db:setup
          bundle exec rake db:migrate
          bundle exec cucumber 
      - name: Coveralls
        env:
          RAILS_ENV: test
        uses: coverallsapp/github-action@master
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
   
